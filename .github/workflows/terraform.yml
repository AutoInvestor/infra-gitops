name: Terraform

on:
  push:
    branches:
      - main
    paths:
      - '**.tf'
  pull_request:
    types: [opened, synchronize]
    branches:
      - main
    paths:
      - '**.tf'


env:
  TF_VAR_project_id: ${{ vars.GCP_PROJECT_ID }}
  TF_VAR_region: ${{ vars.GCP_REGION }}
  TF_VAR_gke_zone: ${{ vars.GCP_GKE_CLUSTER_ZONE }}
  TF_VAR_gke_cluster_name: ${{ vars.GCP_GKE_CLUSTER_NAME }}

jobs:
  check-first-execution:
    name: Check first execution
    runs-on: ubuntu-latest
    outputs:
      first_time_execution: ${{ steps.check.outputs.first_time_execution }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}

      - name: Check first time initialization
        id: check
        env:
          BUCKET_NAME: terraform-state-autoinvestor
        run: |
          if gcloud storage buckets describe "gs://${BUCKET_NAME}" --project="${{ vars.GCP_PROJECT_ID }}" > /dev/null 2>&1; then
            echo "first_time_execution=false" >> $GITHUB_OUTPUT
          else
            echo "first_time_execution=true" >> $GITHUB_OUTPUT
          fi

  terraform-plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    needs: check-first-execution
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Hide backend.tf
        if: needs.check-first-execution.outputs.first_time_execution == 'true'
        run: mv backend.tf backend.tf.hidden

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init
        run: terraform init

      - name: Terraform plan
        run: terraform plan -out=tfplan

      - name: Upload Terraform plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

  terraform-apply:
    name: Terraform apply
    needs:
      - terraform-plan
      - check-first-execution
    runs-on: ubuntu-latest
    environment: production
    if: github.event_name == 'push'
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Download Terraform plan
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: Hide backend.tf
        if: needs.check-first-execution.outputs.first_time_execution == 'true'
        run: mv backend.tf backend.tf.hidden

      - name: Terraform init
        run: terraform init

      - name: Apply Terraform plan
        run: terraform apply -auto-approve tfplan

      - name: Un-hide backend.tf
        if: needs.check-first-execution.outputs.first_time_execution == 'true'
        run: mv backend.tf.hidden backend.tf

      - name: Migrate terraform.state
        if: needs.check-first-execution.outputs.first_time_execution == 'true'
        run: terraform init -migrate-state -force-copy